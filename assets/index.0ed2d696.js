(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function a(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerpolicy&&(o.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?o.credentials="include":e.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(e){if(e.ep)return;e.ep=!0;const o=a(e);fetch(e.href,o)}})();const k="https://opendata-download-metobs.smhi.se/api/version/1.0/parameter/1/station/72420/period/latest-hour/data.json";async function b(){return fetch(k).then(t=>t.json()).then(t=>t).catch(t=>(console.error(t),null))}const $="https://opendata-download-metobs.smhi.se/api/version/1.0/parameter/4/station/72420/period/latest-hour/data.json";async function P(){return fetch($).then(t=>t.json()).then(t=>t).catch(t=>(console.error(t),null))}const j="https://opendata-download-metobs.smhi.se/api/version/1.0/parameter/1.json";async function A(){return fetch(j).then(t=>t.json()).then(t=>t).catch(t=>(console.error(t),null))}async function h(t,n,a){const i=`https://opendata-download-metobs.smhi.se/api/version/1.0/parameter/${a}/station/${t}/period/${n}/data.json`;return fetch(i).then(e=>e.json()).then(e=>e).catch(e=>(console.error(e),null))}const d=document.querySelector("#searchField"),l=document.querySelector("#searchDropdown"),g=document.querySelector("#dropdownStations"),M=document.querySelector("#suggestedStations"),p=document.querySelector("main"),m=document.querySelector("#temperatureNowContainer"),L=document.querySelector("#rainAmount"),y=document.querySelector("#windSpeed"),v=document.querySelector("#temperatureNow"),T=document.querySelector("#locality"),C=document.querySelector("#positionDoNotExist"),H=document.querySelector("#myPosition");let r=[],f=[...r];async function x(){const t=await b(),n=await P();v.innerHTML=`<span>${t.value[0].value}</span>`,T.innerHTML=`<span>${t.station.name}</span>`,y.innerHTML=`<span>${n?.value[0].value}</span>`,L.innerHTML="<span> - </span>"}await x();function I(){d.value===""?(l.classList.remove("display-none"),g.classList.add("display-none")):(l.classList.add("display-none"),g.classList.remove("display-none"))}function q(t){t.stopPropagation(),l.classList.remove("display-none")}function O(){l.classList.add("display-none"),g.classList.add("display-none")}d?.addEventListener("input",I);d?.addEventListener("click",q);d?.addEventListener("focus",q);window.addEventListener("click",O);async function w(t,n){let a=r;n&&(a=f);const i=a[t].key,e=a[t].name,o=await h(i,"latest-hour",1),s=await h(i,"latest-hour",4),u=await h(i,"latest-hour",7);v.innerHTML="<span> - </span>",y.innerHTML="<span> - </span>",L.innerHTML="<span> - </span>",T.innerHTML=`<span>${e}</span>`,o.value[0].value&&(v.innerHTML=`<span>${o?.value[0].value}</span>`),s.value[0].value&&(y.innerHTML=`<span>${s?.value[0].value}</span>`),u.value[0].value&&(L.innerHTML=`<span>${u?.value[0].value}</span>`)}async function W(t){const n=t?.target?.id;await w(n,!0)}async function F(t){if(t.key==="Enter"){const n=t?.target?.id;await w(n,!0)}}async function G(){r=(await A()).station;async function n(i){let e=-1,o=NaN;for(let s=0;s<r.length;s++){const u=r[s].latitude,D=r[s].longitude,E=u-i.coords.latitude,N=D-i.coords.longitude,S=Math.sqrt(E**2+N**2);(S<e||e===-1)&&(e=S,o=s)}await w(o,!1)}function a(){navigator.geolocation?(navigator.geolocation.getCurrentPosition(n),l.classList.add("display-none")):C.innerHTML="Ingen position hittad"}H?.addEventListener("click",a),H?.addEventListener("keypress",a)}await G();function K(){r&&(M.innerHTML="",f=r.filter(t=>t.name.toLowerCase().includes(d.value.toLowerCase())));for(let t=0;t<5;t++)if(f[t]){const n=document.createElement("li");n.setAttribute("tabindex","3"),n.id=String([t]);const a=document.createTextNode(f[t].name);n.appendChild(a),M.appendChild(n),n?.addEventListener("click",W),n?.addEventListener("keypress",F)}}d?.addEventListener("input",K);const c=new Date;c.getMonth()===11||c.getMonth()<=1?(p.classList.add("winter-img"),m.classList.add("winter-decoration-img")):c.getMonth()===2||c.getMonth()<=4?(p.classList.add("spring-img"),m.classList.add("spring-decoration-img")):c.getMonth()===5||c.getMonth()<=7?(p.classList.add("summer-img"),m.classList.add("summer-decoration-img")):(p.classList.add("fall-img"),m.classList.add("fall-decoration-img"));
